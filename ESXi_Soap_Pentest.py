import argparse
import requests
import urllib3
from requests.exceptions import ConnectTimeout, RequestException

soap_requests = [
        {
        "name": "Get ESXi Version",
        "request": """
            <soap:Envelope xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
                <soap:Header><operationID>00000001-00000001</operationID></soap:Header>
                <soap:Body><RetrieveServiceContent xmlns="urn:internalvim25">
                <_this xsi:type="ManagedObjectReference" type="ServiceInstance">ServiceInstance</_this>
                </RetrieveServiceContent></soap:Body></soap:Envelope>
        """,
    },
    {
        "name": "RetrieveServiceContent",
        "request": """
            <soapenv:Envelope xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
             xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <soapenv:Body>
                    <RetrieveServiceContent xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="ServiceInstance">ServiceInstance</_this>
                    </RetrieveServiceContent>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {
        "name": "Retrieve Host Information",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
             xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                <soapenv:Body>
                    <RetrieveProperties xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="PropertyCollector">propertyCollector-123</_this>
                        <specSet>
                            <propSet>
                                <type>HostSystem</type>
                                <all>true</all>
                                <pathSet>name,hardware</pathSet>
                            </propSet>
                            <objectSet>
                                <obj xsi:type="ManagedObjectReference" type="HostSystem">host-123</obj>
                            </objectSet>
                        </specSet>
                    </RetrieveProperties>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {   # Might not work as folder name should be updated `New-Servers` in this case.
        "name": "List all VMs",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
             xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                <soapenv:Body>
                    <RetrieveProperties xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="PropertyCollector">propertyCollector-123</_this>
                        <specSet>
                            <propSet>
                                <type>VirtualMachine</type>
                                <all>true</all>
                                <pathSet>name,summary</pathSet>
                            </propSet>
                            <objectSet>
                                <obj xsi:type="ManagedObjectReference" type="Folder">New-Servers</obj>
                                <skip>false</skip>
                            </objectSet>
                        </specSet>
                    </RetrieveProperties>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {
        "name": "Retrieve DataStore information",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <soapenv:Body>
                    <RetrieveProperties xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="PropertyCollector">propertyCollector-123</_this>
                        <specSet>
                            <propSet>
                                <type>Datastore</type>
                                <all>true</all>
                                <pathSet>name,capacity,freeSpace</pathSet>
                            </propSet>
                            <objectSet>
                                <obj xsi:type="ManagedObjectReference" type="Folder">datastore-folder</obj>
                                <skip>false</skip>
                            </objectSet>
                        </specSet>
                    </RetrieveProperties>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {
        "name": "Retreive Cluster Computer Resource",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <soapenv:Body>
                    <RetrieveProperties xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="PropertyCollector">propertyCollector-123</_this>
                        <specSet>
                            <propSet>
                                <type>ClusterComputeResource</type>
                                <all>true</all>
                                <pathSet>name,summary</pathSet>
                            </propSet>
                            <objectSet>
                                <obj xsi:type="ManagedObjectReference" type="Folder">group-d1</obj>
                                <skip>false</skip>
                            </objectSet>
                        </specSet>
                    </RetrieveProperties>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {
        "name": "Retrieve Networking Information",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <soapenv:Body>
                    <RetrieveProperties xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="PropertyCollector">propertyCollector-123</_this>
                        <specSet>
                            <propSet>
                                <type>Network</type>
                                <all>true</all>
                                <pathSet>name,summary</pathSet>
                            </propSet>
                            <objectSet>
                                <obj xsi:type="ManagedObjectReference" type="Folder">network-folder</obj>
                                <skip>false</skip>
                            </objectSet>
                        </specSet>
                    </RetrieveProperties>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {
        "name": "Retrieve Resource Pool Information",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <soapenv:Body>
                    <RetrieveProperties xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="PropertyCollector">propertyCollector-123</_this>
                        <specSet>
                            <propSet>
                                <type>ResourcePool</type>
                                <all>true</all>
                                <pathSet>name,summary</pathSet>
                            </propSet>
                            <objectSet>
                                <obj xsi:type="ManagedObjectReference" type="Folder">resource-pool-folder</obj>
                                <skip>false</skip>
                            </objectSet>
                        </specSet>
                    </RetrieveProperties>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {
        "name": "Retrieve Alarm Information",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <soapenv:Body>
                    <RetrieveProperties xmlns="urn:internalvim25">
                        <_this xsi:type="ManagedObjectReference" type="PropertyCollector">propertyCollector-123</_this>
                        <specSet>
                            <propSet>
                                <type>Alarm</type>
                                <all>true</all>
                                <pathSet>name,description</pathSet>
                            </propSet>
                            <objectSet>
                                <obj xsi:type="ManagedObjectReference" type="Folder">alarm-folder</obj>
                                <skip>false</skip>
                            </objectSet>
                        </specSet>
                    </RetrieveProperties>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
    {  # Might not work - as config varies
        "name": "Create VM",
        "request": """
            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:urn="urn:internalvim25">
                <soapenv:Body>
                    <CreateVM_Task>
                        <_this xsi:type="Folder">vm-folder</_this>
                        <name>NewVM</name>
                        <config xsi:type="VirtualMachineConfigSpec">
                            <!-- VM configuration settings -->
                            <name>NewVM</name> <!-- Virtual machine name -->
                            <memoryMB>1024</memoryMB> <!-- Memory in MB -->
                            <numCPUs>2</numCPUs> <!-- Number of CPUs -->
                            <!-- Add other configuration settings as needed -->
                        </config>
                        <pool xsi:type="ManagedObjectReference" type="ResourcePool">resource-pool-123</pool>
                        <host xsi:type="ManagedObjectReference" type="HostSystem">host-123</host>
                    </CreateVM_Task>
                </soapenv:Body>
            </soapenv:Envelope>
        """,
    },
 
]

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def read_hosts_from_file(file_path):
    with open(file_path, "r") as file:
        hosts = [line.strip() for line in file if line.strip()]
    return hosts

def send_soap_request(host, api_name, soap_request):
    url = f"https://{host}:443/sdk"  
    headers = {"Content-Type": "text/xml"}
    
    try:
        response = requests.post(url, headers=headers, data=soap_request, timeout=10, verify=False)  
        response.raise_for_status() 
        
        if "notauthenticated" in response.text.lower():
            result = f"{host}, {api_name}, NotAuthenticated"
        else:
            result = f"{host}, {api_name}, Success"
    except ConnectTimeout:
        result = f"{host}, {api_name}, TimeoutError"
    except RequestException as e:
        # Check if "NotAuthenticated" is in the response body
        if "notauthenticated" in str(response.text).lower():
            result = f"{host}, {api_name}, NotAuthenticated"
        else:
            result = f"{host}, {api_name}, RequestError: {str(e)}"
    
    return result

def main():
    parser = argparse.ArgumentParser(description=" Test ESXi SOAP API queries Authentication for a given list of ESXi hosts.")
    parser.add_argument("hosts_file", help="Path to the input file containing hosts.")
    parser.add_argument("output_file", help="Path to the output file for saving results.")
    args = parser.parse_args()

    hosts = read_hosts_from_file(args.hosts_file)

    with open(args.output_file, "w") as output_file:
        for host in hosts:
            output_file.write(f"Checking host: {host}\n")
            for soap_request_data in soap_requests:
                api_name = soap_request_data["name"]
                soap_request = soap_request_data["request"]

                response_result = send_soap_request(host, api_name, soap_request)
                print(response_result)
                output_file.write(response_result + "\n")

if __name__ == "__main__":
    main()
